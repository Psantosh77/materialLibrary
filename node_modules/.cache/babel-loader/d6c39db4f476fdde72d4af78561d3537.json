{"ast":null,"code":"var _jsxFileName = \"D:\\\\materiallibrary\\\\src\\\\modules\\\\login\\\\index.js\";\nimport React from \"react\";\nimport BaseComponent from \"../baseComponent\";\nimport LoginComponent from \"./loginComponent\";\nimport Utils from \"../../utility\";\n\nclass Login extends BaseComponent {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEvent = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.togglePassword = event => {\n      this.setState({\n        isPasswordVisible: !this.state.isPasswordVisible\n      });\n    };\n\n    this.validateLoginForm = () => {\n      this.setState({\n        emailError: Utils.validateEmail(this.state.email) ? \"\" : \"Invalid email address\",\n        passwordError: Utils.isPasswordValid(this.state.password) ? \"\" : \"Password entered is incorrect, please check your password\"\n      });\n      return Utils.validateEmail(this.state.email) && Utils.isPasswordValid(this.state.password);\n    };\n\n    this.onLoginClicked = event => {\n      event.preventDefault();\n      if (this.validateLoginForm()) Utils.basicAlert(\"Logged In\");\n    };\n\n    this.state = {\n      email: \"\",\n      emailError: \"\",\n      password: \"\",\n      passwordError: \"\",\n      isPasswordVisible: false\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(LoginComponent, {\n      state: this.state,\n      onChangeEvent: this.onChangeEvent,\n      togglePassword: this.togglePassword,\n      onLoginClicked: this.onLoginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["D:\\materiallibrary\\src\\modules\\login\\index.js"],"names":["React","BaseComponent","LoginComponent","Utils","Login","constructor","props","onChangeEvent","event","setState","target","id","value","togglePassword","isPasswordVisible","state","validateLoginForm","emailError","validateEmail","email","passwordError","isPasswordValid","password","onLoginClicked","preventDefault","basicAlert","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,KAAN,SAAoBH,aAApB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,aAbmB,GAaFC,KAAD,IAAW;AACzB,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;AAAlC,OAAd;AACD,KAfkB;;AAAA,SAiBnBC,cAjBmB,GAiBDL,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AAAEK,QAAAA,iBAAiB,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAAjC,OAAd;AACD,KAnBkB;;AAAA,SAqBnBE,iBArBmB,GAqBC,MAAM;AACxB,WAAKP,QAAL,CAAc;AACZQ,QAAAA,UAAU,EAAEd,KAAK,CAACe,aAAN,CAAoB,KAAKH,KAAL,CAAWI,KAA/B,IACR,EADQ,GAER,uBAHQ;AAIZC,QAAAA,aAAa,EAAEjB,KAAK,CAACkB,eAAN,CAAsB,KAAKN,KAAL,CAAWO,QAAjC,IACX,EADW,GAEX;AANQ,OAAd;AAQA,aACEnB,KAAK,CAACe,aAAN,CAAoB,KAAKH,KAAL,CAAWI,KAA/B,KACAhB,KAAK,CAACkB,eAAN,CAAsB,KAAKN,KAAL,CAAWO,QAAjC,CAFF;AAID,KAlCkB;;AAAA,SAoCnBC,cApCmB,GAoCDf,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACgB,cAAN;AACA,UAAI,KAAKR,iBAAL,EAAJ,EAA8Bb,KAAK,CAACsB,UAAN,CAAiB,WAAjB;AAC/B,KAvCkB;;AAEjB,SAAKV,KAAL,GAAa;AACXI,MAAAA,KAAK,EAAE,EADI;AAEXF,MAAAA,UAAU,EAAE,EAFD;AAGXK,MAAAA,QAAQ,EAAE,EAHC;AAIXF,MAAAA,aAAa,EAAE,EAJJ;AAKXN,MAAAA,iBAAiB,EAAE;AALR,KAAb;AAOD;;AAEDY,EAAAA,iBAAiB,GAAG,CAAE;;AA8BtBC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,cAAD;AACE,MAAA,KAAK,EAAE,KAAKZ,KADd;AAEE,MAAA,aAAa,EAAE,KAAKR,aAFtB;AAGE,MAAA,cAAc,EAAE,KAAKM,cAHvB;AAIE,MAAA,cAAc,EAAE,KAAKU,cAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAnD+B;;AAsDlC,eAAenB,KAAf","sourcesContent":["import React from \"react\";\r\nimport BaseComponent from \"../baseComponent\";\r\nimport LoginComponent from \"./loginComponent\";\r\nimport Utils from \"../../utility\";\r\n\r\nclass Login extends BaseComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      emailError: \"\",\r\n      password: \"\",\r\n      passwordError: \"\",\r\n      isPasswordVisible: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  onChangeEvent = (event) => {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  };\r\n\r\n  togglePassword = (event) => {\r\n    this.setState({ isPasswordVisible: !this.state.isPasswordVisible });\r\n  };\r\n\r\n  validateLoginForm = () => {\r\n    this.setState({\r\n      emailError: Utils.validateEmail(this.state.email)\r\n        ? \"\"\r\n        : \"Invalid email address\",\r\n      passwordError: Utils.isPasswordValid(this.state.password)\r\n        ? \"\"\r\n        : \"Password entered is incorrect, please check your password\",\r\n    });\r\n    return (\r\n      Utils.validateEmail(this.state.email) &&\r\n      Utils.isPasswordValid(this.state.password)\r\n    );\r\n  };\r\n\r\n  onLoginClicked = (event) => {\r\n    event.preventDefault();\r\n    if (this.validateLoginForm()) Utils.basicAlert(\"Logged In\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <LoginComponent\r\n        state={this.state}\r\n        onChangeEvent={this.onChangeEvent}\r\n        togglePassword={this.togglePassword}\r\n        onLoginClicked={this.onLoginClicked}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}