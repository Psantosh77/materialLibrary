{"ast":null,"code":"var _jsxFileName = \"D:\\\\materiallibrary\\\\src\\\\modules\\\\signup\\\\index.js\";\nimport React from \"react\";\nimport BaseComponent from '../baseComponent';\nimport SignUpComponent from './signUpComponent';\nimport Utils from \"../../utility\";\n\nclass Register extends BaseComponent {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEvent = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.togglePassword = event => {\n      this.setState({\n        isPasswordVisible: !this.state.isPasswordVisible\n      });\n    };\n\n    this.validateLoginForm = () => {\n      this.setState({\n        nameError: Utils.isEmpty(this.state.name) ? \"Please enter name\" : Utils.validateName(this.state.name) ? \"\" : \"Invalid name\",\n        emailError: Utils.validateEmail(this.state.email) ? \"\" : \"Invalid email address\",\n        passwordError: Utils.isPasswordValid(this.state.password) ? \"\" : \"Password should contain 1 special character\",\n        confirmPasswordError: Utils.isPasswordValid(this.state.confirmPassword) ? this.state.password === this.state.confirmPassword ? \"\" : \"Passwords do not match\" : \"Password should contain 1 special character\"\n      });\n      return Utils.validateName(this.state.name) && Utils.validateEmail(this.state.email) && Utils.isPasswordValid(this.state.password) && Utils.isPasswordValid(this.state.confirmPassword) && this.state.password === this.state.confirmPassword;\n    };\n\n    this.onLoginClicked = event => {\n      event.preventDefault();\n      if (this.validateLoginForm()) Utils.basicAlert(\"Badhiyaaaa\");\n    };\n\n    this.state = {\n      name: \"\",\n      nameError: \"\",\n      email: \"\",\n      emailError: \"\",\n      password: \"\",\n      passwordError: \"\",\n      confirmPassword: \"\",\n      confirmPasswordError: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(SignUpComponent, {\n      state: this.state,\n      onChangeEvent: this.onChangeEvent,\n      togglePassword: this.togglePassword,\n      onLoginClicked: this.onLoginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["D:\\materiallibrary\\src\\modules\\signup\\index.js"],"names":["React","BaseComponent","SignUpComponent","Utils","Register","constructor","props","onChangeEvent","event","setState","target","id","value","togglePassword","isPasswordVisible","state","validateLoginForm","nameError","isEmpty","name","validateName","emailError","validateEmail","email","passwordError","isPasswordValid","password","confirmPasswordError","confirmPassword","onLoginClicked","preventDefault","basicAlert","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport BaseComponent from '../baseComponent'\r\nimport SignUpComponent from './signUpComponent'\r\nimport Utils from \"../../utility\";\r\n\r\nclass Register extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            nameError: \"\",\r\n            email: \"\",\r\n            emailError: \"\",\r\n            password: \"\",\r\n            passwordError: \"\",\r\n            confirmPassword: \"\",\r\n            confirmPasswordError: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    onChangeEvent = (event) => {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    };\r\n\r\n    togglePassword = (event) => {\r\n        this.setState({isPasswordVisible: !this.state.isPasswordVisible});\r\n    };\r\n\r\n\r\n    validateLoginForm = () => {\r\n        this.setState({\r\n            nameError: Utils.isEmpty(this.state.name) ? \"Please enter name\" : (Utils.validateName(this.state.name) ? \"\" : \"Invalid name\"),\r\n            emailError: Utils.validateEmail(this.state.email) ? \"\" : \"Invalid email address\",\r\n            passwordError: Utils.isPasswordValid(this.state.password) ? \"\" : \"Password should contain 1 special character\",\r\n            confirmPasswordError: Utils.isPasswordValid(this.state.confirmPassword) ?\r\n                (this.state.password === this.state.confirmPassword ? \"\" : \"Passwords do not match\") : \"Password should contain 1 special character\"\r\n        });\r\n        return Utils.validateName(this.state.name) && Utils.validateEmail(this.state.email) && Utils.isPasswordValid(this.state.password)\r\n            && Utils.isPasswordValid(this.state.confirmPassword) && this.state.password === this.state.confirmPassword;\r\n    };\r\n\r\n    onLoginClicked = (event) => {\r\n        event.preventDefault();\r\n        if (this.validateLoginForm())\r\n            Utils.basicAlert(\"Badhiyaaaa\")\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <SignUpComponent state={this.state}\r\n                             onChangeEvent={this.onChangeEvent}\r\n                             togglePassword={this.togglePassword}\r\n                             onLoginClicked={this.onLoginClicked}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}